{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","title","setTitle","useEffect","fetch","then","res","json","data","email","password","content","setContent","getValue","e","target","name","value","className","type","placeholder","onChange","onClick","preventDefault","method","headers","body","JSON","stringify","user","response","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOA2FeA,MAvFf,WAAgB,IAAD,EACaC,qBADb,mBACNC,EADM,KACCC,EADD,KAGbC,qBAAU,WACRC,MAAM,QACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUN,EAASM,EAAKP,aANrB,MASiBD,mBAAS,CACrCS,MAAO,GACPC,SAAU,KAXC,mBASNC,EATM,KASGC,EATH,KAeLH,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAGTG,EAAW,SAACC,GAAO,IAAD,EACEA,EAAEC,OAAlBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACdL,EAAW,2BACND,GADK,kBAEPK,EAAOC,MAuCZ,OACE,qBAAKC,UAAU,MAAf,SACGjB,EACC,qCACE,6BAAKA,IACL,iCACE,sBAAKiB,UAAU,aAAf,UACE,0CACA,uBAAOD,MAAOR,EAAOU,KAAK,OAAOH,KAAK,QAAQI,YAAY,oDAAYC,SAAUR,OAElF,sBAAKK,UAAU,aAAf,UACE,6CACA,uBAAOD,MAAOP,EAAUS,KAAK,OAAOH,KAAK,WAAWI,YAAY,0DAAaC,SAAUR,OAEzF,wBAAQM,KAAK,SAASG,QAjDpB,SAACR,GACXA,EAAES,iBACFnB,MAAM,WAAY,CAChBoB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,KAAM,CACJpB,MAAOA,EACPC,SAAUA,OAIbL,MAAK,SAACyB,GAAD,OAAcA,EAASvB,UAC5BF,MAAK,SAACG,GAAD,OAAUuB,QAAQC,IAAIxB,EAAKG,QAAQkB,SAE3CjB,EAAW,2BACND,GADK,IAERF,MAAO,GACPC,SAAU,OA+BJ,0BAMJ,4CCzEOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b7dc7d60.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [title, setTitle] = useState();\n\n  useEffect(() => {\n    fetch('/api')\n      .then((res) => res.json())\n      .then((data) => setTitle(data.title));\n  });\n\n  const [content, setContent] = useState({\n    email: '',\n    password: '',\n  });\n\n  // 객체 비구조화 할당\n  const { email, password } = content;\n\n  // 작성되는 글의 각 요소의 밸류값을 받아오는 함수\n  const getValue = (e) => {\n    const { name, value } = e.target;\n    setContent({\n      ...content,\n      [name]: value,\n    });\n  };\n\n  const add = (e) => {\n    e.preventDefault();\n    fetch('/api/add', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user: {\n          email: email,\n          password: password,\n        },\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(data.content.user));\n\n    setContent({\n      ...content,\n      email: '',\n      password: '',\n    });\n  };\n\n  const send = (e) => {\n    axios\n      .post('/api/add', {\n        visible: email,\n        category: '1234',\n      })\n      .then((response) => {\n        console.log(response.data);\n      });\n    e.preventDefault();\n    alert('등록 완료!');\n  };\n\n  return (\n    <div className='App'>\n      {title ? (\n        <>\n          <h1>{title}</h1>\n          <form>\n            <div className='form-group'>\n              <label>email</label>\n              <input value={email} type='text' name='email' placeholder='이메일을 입력하라' onChange={getValue} />\n            </div>\n            <div className='form-group'>\n              <label>password</label>\n              <input value={password} type='text' name='password' placeholder='비밀번호를 입력하라' onChange={getValue} />\n            </div>\n            <button type='submit' onClick={add}>\n              Submit\n            </button>\n          </form>\n        </>\n      ) : (\n        <h1>LOADING</h1>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}